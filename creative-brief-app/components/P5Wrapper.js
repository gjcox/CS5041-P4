/* This code is adapted from https://github.com/atorov/react-hooks-p5js by Veselin. Accessed 04/05/2023.*/

import { memo, useEffect, useRef } from "react";

/**
 * N.B. in the original implementation, id's default value url-friendly unique id generated by shortid
 */
export default function (id = "SketchWrapper") {
  let canvas = null;

  function P5Wrapper({
    sketch = () => {},
    state = {},
    dispatch = (state, payload) => {
      return { ...state, [payload.key]: payload.value };
    }, // I have made this based on https://github.com/atorov/react-hooks-p5js/blob/master/src/components/App/AppStateProvider/reducer.js
  }) {
    console.log(`::: P5Wrapper(${id}) component has been re-rendered`);

    const sketchContainer = useRef(null);

    useEffect(() => {
      console.log(`::: P5Wrapper(${id})/useEffect()`);
      canvas = new window.p5(sketch, sketchContainer.current);
      canvas.state = state;
      canvas.dispatch = dispatch;

      return () => {
        console.log(`::: P5Wrapper(${id})/useEffect.return()`);
        canvas.remove();
      };
    }, [dispatch, sketch, state]);

    return (
      <div ref={sketchContainer}>
        <h5>{`P5Wrapper #${id}`}</h5>
      </div>
    );
  }

  return memo(P5Wrapper, (_, nextProps) => {
    canvas.state = { ...nextProps.state };

    return true;
  });
}

/* End of adapted code */
